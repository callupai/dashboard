"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var actionmanager_1 = require("./clients/actionmanager");
var appconfig_1 = require("./clients/appconfig");
var statsmanager_1 = require("./clients/statsmanager");
var worldmanager_1 = require("./clients/worldmanager");
var JsonApi = require('devour-client');
var LocalStorageTokenGetter = /** @class */ (function () {
    function LocalStorageTokenGetter() {
    }
    LocalStorageTokenGetter.prototype.getToken = function () {
        return localStorage.getItem("token");
    };
    return LocalStorageTokenGetter;
}());
var DaptinClient = /** @class */ (function () {
    function DaptinClient(endpoint, debug) {
        var that = this;
        debug = debug || false;
        that.appConfig = new appconfig_1.AppConfig(endpoint);
        that.jsonApi = new JsonApi({
            apiUrl: that.appConfig.getEndpoint() + '/api',
            pluralize: false,
            logger: debug
        });
        that.tokenGetter = new LocalStorageTokenGetter();
        that.actionManager = new actionmanager_1.ActionManager(that.appConfig, that.tokenGetter);
        that.worldManager = new worldmanager_1.WorldManager(that.appConfig, that.tokenGetter, that.jsonApi, that.actionManager);
        that.statsManager = new statsmanager_1.StatsManager(that.appConfig, that.tokenGetter);
        that.jsonApi.insertMiddlewareBefore("HEADER", {
            name: "Auth Header middleware",
            req: function (req) {
                var token = that.tokenGetter.getToken();
                if (token) {
                    that.jsonApi.headers['Authorization'] = 'Bearer ' + token;
                }
                return req;
            }
        });
    }
    return DaptinClient;
}());
exports.DaptinClient = DaptinClient;
